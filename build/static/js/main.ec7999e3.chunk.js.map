{"version":3,"sources":["services/contact.js","components/Search.js","components/NewPersonForm.js","components/ListEntry.js","components/List.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","contact","axios","get","then","response","data","newObj","post","id","put","concat","console","log","delete","Search","props","react_default","a","createElement","Fragment","value","search","onChange","handler","NewPersonForm","_ref","name","number","nameHandler","numberHandler","addHandler","type","onClick","ListEntry","person","List","persons","personDeleteHandler","map","components_ListEntry","key","Notification","message","cssClass","className","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","newPerson","setNewPerson","_useState5","_useState6","setSearch","_useState7","_useState8","error","setError","_useState9","_useState10","success","setSuccess","useEffect","contactService","contacts","catch","errorSetter","searchRes","filter","toLowerCase","includes","setTimeout","successSetter","components_Notification","components_Search","event","target","components_NewPersonForm","objectSpread","preventDefault","some","window","confirm","find","p","result","components_List","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.ec7999e3.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const req = axios.get(baseUrl)\n  return req.then(response => response.data)\n}\n\nconst create = newObj => {\n  const req = axios.post(baseUrl, newObj)\n  return req.then(response => response.data)\n}\n\nconst update = (id, newObj) => {\n  const req = axios.put(`${baseUrl}/${id}`, newObj)\n  return req.then(response => {\n  \tconsole.log(response)\n  \treturn response.data\n  })\n}\n\nconst remove = (id) => {\n  const req = axios.delete(`${baseUrl}/${id}`)\n  return req.then(response => response)\n}\n\nexport default { getAll, create, update, remove }","import React from 'react';\n\nconst Search = (props) => {\n  return (\n    <>\n      Search: <input value={props.search} onChange={props.handler} />\n    </>\n  )\n}\n\nexport default Search","import React from 'react';\n\nconst NewPersonForm = ({ name, number, nameHandler, numberHandler, addHandler }) => {\n  return (\n    <>\n      <form>\n        <div>\n          Name: <input value={name} onChange={nameHandler} /><br />\n          Number: <input value={number} onChange={numberHandler} />\n        </div>\n        <div>\n          <button type=\"submit\" onClick={addHandler}>Add</button>\n        </div>\n      </form>\n    </>\n  )\n}\n\nexport default NewPersonForm","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nconst ListEntry = ({ person, handler }) => {\n  return (\n    <>\n      <p>{person.name}, {person.number} <button onClick={handler} >Delete</button></p>\n    </>\n  )\n}\n\nexport default ListEntry","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport ListEntry from './ListEntry'\n\nconst List = ({ persons, personDeleteHandler }) => {\n  return (\n    <>\n      {persons.map(person =>\n        <ListEntry key={person.name} person={person} handler={() => personDeleteHandler(person.id)} />\n      )}\n    </>\n  )\n}\n\nexport default List","import React from 'react'\n\nconst Notification = ({ message, cssClass }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={cssClass} >\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport contactService from './services/contact'\nimport Search from './components/Search'\nimport NewPersonForm from './components/NewPersonForm'\nimport List from './components/List'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newPerson, setNewPerson ] = useState(\n    { name: '', number: '' }\n  )\n  const [ search, setSearch ] = useState('')\n  const [ error, setError ] = useState(null)\n  const [ success, setSuccess ] = useState(null)\n \n  useEffect(() => {\n    contactService\n      .getAll()\n      .then(contacts => {\n        setPersons(contacts)\n      })\n      .catch(error => {\n        errorSetter(\"Error: couldn't load contacts from server\")\n      })\n  },[])\n\n  const nameChangeHandler = (event) => {\n    setNewPerson({...newPerson, name: event.target.value})\n  }\n  const numberChangeHandler = (event) => {\n    setNewPerson({...newPerson, number: event.target.value})\n  }\n  const searchChangeHandler = (event) => {\n    setSearch(event.target.value)\n  }\n\n  const searchRes = persons.filter(person => person.name.toLowerCase().includes(search.toLowerCase()))\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const isUnique = !persons.some(person => person.name.toLowerCase() === newPerson.name.toLowerCase())\n\n    if (isUnique) {\n      contactService\n        .create(newPerson)\n        .then(result => {\n          setPersons(persons.concat(result))\n          successSetter(`Successfully added ${newPerson.name}`)\n        })\n        .catch(error => {\n          errorSetter(\"Error: couldn't create new contact\")\n        })\n    } else if (window.confirm(`Overriding ${newPerson.name}'s number with ${newPerson.number}. Are you sure?`)) {\n\n      const id = persons.find(p => p.name.toLowerCase() === newPerson.name.toLowerCase()).id\n\n      contactService      \n        .update(id, newPerson)\n        .then(result => {\n          setPersons(persons.map(p => p.id !== id ? p : result))\n          successSetter(`Successfully updated ${newPerson.name}'s number`)\n        })\n        .catch(error => {\n          errorSetter(\"Error: Couldn't update contact\")\n        })\n    }\n\n    setNewPerson({ name: '', number: '' })\n  }\n\n  const personDeleteHandler = id => {\n    contactService\n      .remove(id)\n      .then(result => {\n        setPersons(persons.filter(p => p.id !== id))\n        successSetter(`Successfully deleted contact`)\n      })\n      .catch(error => {\n        errorSetter(\"Error: couldn't delete contact\")\n      })\n  }\n\n  const errorSetter = (message) => {\n    setError(message)\n    setTimeout(() => {\n      setError(null)\n    }, 5000)\n  }\n\n  const successSetter = (message) => {\n    setSuccess(message)\n    setTimeout(() => {\n      setSuccess(null)\n    }, 5000)\n  }\n\n  return (\n    <>\n      <Notification message={error} cssClass=\"error\" />\n      <Notification message={success} cssClass=\"success\" />\n      <div id=\"master\">\n        <h2>Phonebook</h2>\n        <Search search={search} handler={searchChangeHandler} />\n        <h3>Add new contact</h3>\n        <NewPersonForm\n          name={newPerson.name}\n          number={newPerson.number}\n          nameHandler={nameChangeHandler}\n          numberHandler={numberChangeHandler}\n          addHandler={addPerson}\n        />\n        <h3>Numbers</h3>\n        <List persons={searchRes} personDeleteHandler={personDeleteHandler} />\n      </div>\n    </>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport Index from './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}